# Google Sheets Logging Script

This guide explains how to create a Google Spreadsheet and attach a Google Apps Script to it, enabling data logging via HTTP GET requests as implemented in the TTGO_Lora Arduino project. The script will log data to specified sheets and handle different commands.

## Prerequisites

- A Google account
- Basic understanding of Google Sheets
- Familiarity with Google Apps Script

## Steps to Create and Deploy the Google Apps Script

### 1. Create a Google Spreadsheet

1. Open [Google Sheets](https://sheets.google.com) and create a new spreadsheet.
2. Name your spreadsheet (e.g., `Data Logger`).

### 2. Open the Script Editor

1. In your new spreadsheet, click on `Extensions` in the menu.
2. Select `Apps Script`.

### 3. Add the Google Apps Script

1. Delete any code in the script editor and paste the provided script.

### 4. Save and Deploy the Script

1. Click on the `File` menu and select `Save`. Name your project (e.g., `DataLoggerScript`).
2. Click on the `Deploy` button and select `New deployment`.
3. Choose `Web app` as the deployment type.
4. Set `Execute as` to `Me (your email)`.
5. Set `Who has access` to `Anyone` or `Anyone, even anonymous` depending on your needs.
6. Click on `Deploy`.
7. Copy the deployment ID provided after the deployment. This will be used to build the endpoint URL to which you will send your GET requests.

### 5. Test the Script (Optional)

1. Open a new browser tab and navigate to the deployment URL.
2. Append query parameters to the URL to test data logging. For example:

    ```
    https://script.google.com/macros/s/<your-deployment-id>/exec?sheet_name=data&bat_voltage=3.7&rawVbat=3700&distance=5.0&duration=120&temperature=22.5&internal_temp=22.5&internal_voltage=3.3&core_voltage=3.3&packetnum=1&snr=10&uuid=1234&command=append_row
    ```

3. Check your Google Sheet to verify that the data has been logged correctly.

## Summary

By following these steps, you've created a Google Apps Script that logs data to a Google Spreadsheet via HTTP GET requests. You can customize the script further to handle different types of data and commands as needed.

## License

MIT License

Copyright (c) 2024 Sebastien Leclerc

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.
